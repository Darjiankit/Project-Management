{"version":3,"sources":["layout/SignInLink.js","Store/actions/authAction.js","layout/SignOutLink.js","layout/Navbar.js","project/ProjectSummary.js","project/ProjectList.js","dashboard/Notification.js","dashboard/Dashboard.js","project/ProjectDetails.js","auth/SignIn.js","auth/SignUp.js","project/CrateProject.js","Store/actions/projectActions.js","App.js","serviceWorker.js","Store/reducer/authReducer.js","Store/reducer/projectReducer.js","Store/reducer/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignOutLink","state","console","log","firebase","link","uid","layout_SignInLink","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","project_ProjectList","Notification","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handlechange","e","_this","setState","Object","defineProperty","target","value","handlesubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","cred","credentials","signInWithEmailAndPassword","catch","SignUp","firstName","lastName","handleChange","handleSubmit","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","err","CreateProject","createProject","history","push","autherId","add","objectSpread","authorId","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbconfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37139fc1.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { signOut } from \"../../src/Store/actions/authAction\"\n\nconst SignInLink = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\nexport default connect(null, mapDispatchToProps)(SignInLink)\n","import { functions } from \"firebase\";\n\n//import { firestore } from \"firebase\";\n\nexport const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: \"LOGIN_SUCCESS\" })\n        }).catch(() => {\n            dispatch({ type: \"LOGIN_ERROR\" });\n        })\n    }\n}\n\nexport const signOut = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: \"SIGNOUT SUCCESSFULLY\" })\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then(resp => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            });\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err });\n        });\n    }\n}\n\n","import React from 'react'\nimport { NavLink } from \"react-router-dom\"\n\nexport default function SignOutLink() {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\n        </ul>\n    )\n}\n","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport SignInLink from './SignInLink';\nimport SignOutLink from './SignOutLink';\nimport { connect } from \"react-redux\"\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const link = auth.uid ? <SignInLink profile={profile} /> : <SignOutLink />;\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo left\">Project Tracker</Link>\n                {link}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar)\n","import React from 'react'\nimport moment from \"moment\"\n\nexport default function ProjectSummary({ project }) {\n\n    return (\n        <div className=\"card z-depth-2 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList\n","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"online-users\">\n                        {notifications && notifications.map(item => {\n                            return <li key={item.id}>\n                                <span className=\"pink-text\">{item.user} </span>\n                                <span>{item.content}</span>\n                                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n                            </li>\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../project/ProjectList'\nimport Notifications from '../dashboard/Notification'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: [\"createdAt\", \"desc\"] },\n        { collection: 'notifications', limit: 3, orderBy: [\"time\", \"desc\"] }\n    ])\n)(Dashboard)","import React from 'react'\nimport { connect } from \"react-redux\"\nimport { firestoreConnect } from \"react-redux-firebase\"\nimport { compose } from \"redux\"\nimport { Redirect } from \"react-router-dom\"\nimport moment from \"moment\"\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-1\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                        <div className=\"card-action grey lighten-4 dark-text\">\n                            <div>Posted by {project.authorFirstName}{project.authorLastName}</div>\n                            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project....</p>\n            </div>\n        )\n    }\n\n}\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: \"projects\" }\n    ])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { signIn } from \"../../src/Store/actions/authAction\"\nimport { Redirect } from \"react-router-dom\"\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handlechange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handlesubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n\n    render() {\n        const { authError, auth } = this.props\n        if (auth.uid) return <Redirect to=\"/\" />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handlesubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handlechange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handlechange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (cred) => dispatch(signIn(cred))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n\n\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../src/Store/actions/authAction'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id='firstName' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id='lastName' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"center red-text\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\nimport { createProject } from \"../Store/actions/projectActions\"\nimport { connect } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\"\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handlechange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handlesubmit = (e) => {\n        e.preventDefault()\n        this.props.createProject(this.state)\n        this.props.history.push(\"/\")\n    }\n\n    render() {\n        const { auth } = this.props\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handlesubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handlechange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handlechange}></textarea>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStatToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStatToProps, mapDispatchtoProps)(CreateProject)\n\n\n\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        //to make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const autherId = getState().firebase.auth.uid;\n        firestore.collection(\"projects\").add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: autherId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({\n                type: \"CREATE_PROJECT\",\n                project: project\n            });\n        }).catch((err) => {\n            dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n        })\n\n    }\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport Navbar from './layout/Navbar';\nimport Dashboard from \"./dashboard/Dashboard\"\nimport ProjectDetails from './project/ProjectDetails';\nimport SignIn from './auth/SignIn';\nimport SignUp from './auth/SignUp';\nimport CreateProject from './project/CrateProject';\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/Project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n\n        </Switch>\n\n      </div>\n    </BrowserRouter>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst initState = {\n    authError: null\n}\n\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"LOGIN_ERROR\":\n            return {\n                ...state,\n                authError: \"Login Failed\"\n            }\n        case \"LOGIN_SUCCESS\":\n            return {\n                ...state,\n                authError: null\n            }\n        case \"SIGNOUT_SUCCESS\":\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer","\n\nconst initState = {\n    project: [\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\n    ]\n}\n\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"CREATE_PROJECT\":\n            console.log(\"created project\", action.project)\n            return state;\n        // case \"CREATE_PROJECT_ERROR\":\n        //     console.log(\"create project error\", action.err);\n        //     return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer","import authReducer from \"./authReducer\"\nimport projectReducer from \"./projectReducer\"\nimport { combineReducers } from \"redux\"\nimport { firestoreReducer } from \"redux-firestore\"\nimport { firebaseReducer } from \"react-redux-firebase\"\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    projects: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\nexport default rootReducer\n","import firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/auth\"\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDOuKMNR9uJr1hD2fofa9UEpbQJJ8pFL5o\",\n    authDomain: \"ankit-project-management.firebaseapp.com\",\n    databaseURL: \"https://ankit-project-management.firebaseio.com\",\n    projectId: \"ankit-project-management\",\n    storageBucket: \"ankit-project-management.appspot.com\",\n    messagingSenderId: \"558227817532\",\n    appId: \"1:558227817532:web:7754ca15629524e3\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true })\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from \"redux\"\nimport rootReducer from \"./Store/reducer/rootReducer\"\nimport { Provider } from \"react-redux\"\nimport thunk from \"redux-thunk\"\nimport { reduxFirestore, getFirestore } from \"redux-firestore\"\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\"\nimport fbconfig from \"./config/fbconfig\"\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbconfig),\n        reactReduxFirebase(fbconfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}